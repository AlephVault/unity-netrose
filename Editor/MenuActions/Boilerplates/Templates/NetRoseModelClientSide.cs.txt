using AlephVault.Unity.Meetgard.Types;
using AlephVault.Unity.Binary.Wrappers;
using GameMeanMachine.Unity.NetRose.Authoring.Behaviours.Client;

namespace Client.Authoring.Behaviours.NetworkObjects.Models
{
    public class #SCRIPTNAME# : NetRoseModelClientSide<#SPAWNDATA_TYPE#, #REFRESHDATA_TYPE#>
    {
        // THIS BEHAVIOUR IS MEANT TO BE ATTACHED TO MAP OBJECTS
        // THAT ARE MEANT TO BE SYNCHRONIZED THROUGH THE NETWORK.
        // THIS MEANS: OBJECTS THAT SHOULD RECEIVE REAL-TIME UPDATES
        // FROM THE CONNECTED SERVER.

        protected override void InflateFrom(#SPAWNDATA_TYPE# fullData)
        {
            // Implement this method to visually update this object
            // based on the full spawn data received through the
            // network update.
        }

        protected override void UpdateFrom(#REFRESHDATA_TYPE# refreshData)
        {
            // Implement this method to visually update this object
            // based on the refresh data received through the network
            // update. Depending on how the game is designed, it can
            // represent a full refresh data object or a partial one,
            // so some aspects are only meant to be refreshed.
        }
    }
}
